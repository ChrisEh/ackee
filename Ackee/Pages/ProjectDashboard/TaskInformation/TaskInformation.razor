@page "/projects/{ProjectId}/tasks/{TaskId}"
@using Ackee.Data.Model
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager

@if (project != null)
{
    <DashboardLayout Project="@project"
                     PageName="@task.TaskName"
                     PageRoute="@($"/projects/{ProjectId}/tasks/{TaskId}")"
                     PageRouteCustomIndexes=@(new List<int> { 1, 3 })
                     PageRouteCustomNames=@(new List<string>() { project.ProjectName, task.TaskName })>
        <div class="tasks_content">
            TaskInformation
        </div>
    </DashboardLayout>
}

@code {
    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    [Parameter]
    public string ProjectId { get; set; }

    [Parameter]
    public string TaskId { get; set; }

    private AspNetProjects project = null;
    private AspNetTasks task = null;

    private ApplicationUser currentUser = null;
    System.Security.Claims.ClaimsPrincipal CurrentUser;

    // Get project object by project ID. If loaded, display it.
    protected override async Task OnInitializedAsync()
    {
        CurrentUser = (await authenticationStateTask).User;
        await RefreshUser();
        await RefreshProject();
        await RefreshTask();
    }

    private async Task RefreshProject()
    {
        project = await (new HttpClient()).GetJsonAsync<AspNetProjects>($"http://localhost:53508/api/projects/{ProjectId}");


        if (!CurrentUserIsMemberOfProject())
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task RefreshTask()
    {
        task = await (new HttpClient()).GetJsonAsync<AspNetTasks>($"http://localhost:53508/api/tasks/{TaskId}");
    }

    private async Task RefreshUser()
    {
        currentUser = await (new HttpClient()).GetJsonAsync<ApplicationUser>($"http://localhost:53508/api/users/{CurrentUser.Identity.Name}");
        StateHasChanged();
    }

    private bool CurrentUserIsMemberOfProject()
    {
        foreach (var userProject in project.UserProjects)
        {
            if (currentUser.Id == userProject.UserId)
            {
                return true;
            }
        }

        return false;
    }
}

